#program LtData
#autoline 10,10

; Mark Bailey
; 17 Jan 2024
; Generate data for Nexions
;
; a%[] Sprite Pattern
; b%[] Difficulty
; %e[] Contains Formation Data
; X pos, Y Pos, xLower, xUpper xStep, yLower, yUpper, yStep
;
RUN AT 3
DIM pat(9,8)
PROC unitTests()
;PROC display()
;PROC dump(1)

;PROC build()
;CLEAR
;LOAD "data.bin" INT
;PROC display(1)

STOP

DEFPROC build()
RESTORE @Formation1
FOR %i=1 TO 5
    PRINT "Pattern ";%i
    PROC readPattern()
    PROC convertPattern(%i)
NEXT %i
PRINT "Saving data.bin"
SAVE "data.bin" INT
ENDPROC

DEFPROC display(%i)
#; Layers
LAYER 0: BORDER 2: PAPER 0: INK 7: CLS 
LAYER CLEAR
;LAYER OVER 7
LAYER 2,1: LAYER ERASE 0,0,256,192

#; Sprites
BANK NEW bankId
LOAD "sprites.spr" BANK bankId
SPRITE CLEAR 
SPRITE BANK bankId
BANK bankId CLEAR
SPRITE PRINT 1
SPRITE STOP

%j= (%i-1)*9+1
FOR %i=%j TO %j+8
    SPRITE %i,%q(i),%r(i),22,1
    SPRITE CONTINUE %i,%s(i) TO %t(i) STEP %u(i) RUN ,%v(i) TO %w(i) STEP %x(i) RUN,22,0
NEXT %i

@loop: SPRITE MOVE INT : GO TO @loop
ENDPROC

DEFPROC dump(index)
FOR %i=%1 TO %9
    PRINT %i;",";%q(i);",";%r(i);",";%s(i);"-";%t(i);":";%u(i);" ";%v(i);"-";%w(i);":";%x(i)
NEXT %i

ENDPROC

DEFPROC readData()
    DIM title$(30,18)
    RESTORE @Wave
    FOR %i=1 TO 30
        READ title$(%i),%a(i),%b(i)
    NEXT %i
ENDPROC

DEFPROC readPattern()
    LOCAL index
    FOR i=1 TO 8
        READ a$
        FOR j=1 TO 15
            IF a$(j)<>" " THEN index = VAL(a$(j)):pat(index,1)=j-1:pat(index,2)=i-1
        NEXT j
    NEXT i
    FOR i=1 TO 9
        READ xStart,xEnd,xStep,yStart,yEnd,yStep
        pat(i,3)=xStart
        pat(i,4)=xEnd
        pat(i,5)=xStep
        pat(i,6)=yStart
        pat(i,7)=yEnd
        pat(i,8)=yStep
    NEXT i
ENDPROC

;
; Convert Data in pat() array to INT arrays
; X,Y grid co-ords to pixel co-ords 
; Relative offsets to absolute pixel values
;        pat(i,1)= X Pos
;        pat(i,2)= Y Pos
;        pat(i,3)=xStart
;        pat(i,4)=xEnd
;        pat(i,5)=xStep
;        pat(i,6)=yStart
;        pat(i,7)=yEnd
;        pat(i,8)=yStep
;
;%i - Index into %e[]
DEFPROC convertPattern(%i)
    %k = (%i-1)*72+1
    FOR j=1 TO 9
        x=40+pat(j,1)*16
        y=56+pat(j,2)*16

        %e[k] = x :; X Pos
        %e[k+1] = y :; Y Pos
        %e[k+2] = x + pat(j,3)*16:; xLower
        %e[k+3] = x + pat(j,4)*16:; xUpper
        %e[k+4] = pat(j,5):; xStep
        %e[k+5] = y + pat(j,6)*16:; yLower
        %e[k+6] = y + pat(j,7)*16:; yUpper
        %e[k+7]=pat(j,8): ; yStep
        %k+=8
    NEXT j
ENDPROC

DEFPROC unitTests()
    PROC testReadPattern1()
    PROC testReadPattern2()
    PROC testConvertPattern1()
ENDPROC

DEFPROC testReadPattern1()
    PRINT "testReadPattern1"
    RESTORE @Formation1
    PROC readPattern()
    IF pat(1,1)<>7 THEN PRINT "Failed: x pos ";pat(1,1)
    IF pat(1,2)<>5 THEN PRINT "Failed: y pos ";pat(1,2)

    IF pat(9,1)<>9 THEN PRINT "Failed: x pos ";pat(9,1)
    IF pat(9,2)<>1 THEN PRINT "Failed: y pos ";pat(9,2)
    PRINT "testReadPattern1 Finished"
ENDPROC

DEFPROC testReadPattern2()
    PRINT "testReadPattern2"
    RESTORE @Formation1
    PROC readPattern()
    IF pat(1,3)<>-4 THEN PRINT "Failed:  ";pat(1,4)
    IF pat(2,4)<>4 THEN PRINT "Failed:  ";pat(2,5)
    IF pat(3,5)<>1 THEN PRINT "Failed:  ";pat(3,6)
    IF pat(4,6)<>-0.25 THEN PRINT "Failed:  ";pat(4,7)
    IF pat(5,7)<>0.5 THEN PRINT "Failed:  ";pat(5,8)
    IF pat(9,8)<>1 THEN PRINT "Failed:  ";pat(9,8)

    PRINT "testReadPattern2 Finished"
ENDPROC

DEFPROC testConvertPattern1()
    PRINT "testConvertPattern2"
    RESTORE @Formation1
    PROC readPattern()
    PROC convertPattern(5)
    IF %e[289]<>152 THEN PRINT "Failed1:  ";%e[289]
    IF %e[290]<>136 THEN PRINT "Failed2:  ";%e[290]
    IF %e[291]<>88 THEN PRINT "Failed3:  ";%e[291]
    IF %e[292]<>216 THEN PRINT "Failed4:  ";%e[292]
    IF %e[293]<>1 THEN PRINT "Failed5:  ";%e[293]
    IF %e[294]<>132 THEN PRINT "Failed6:  ";%e[294]
    IF %e[295]<>144 THEN PRINT "Failed7:  ";%e[295]
    IF %e[296]<>1 THEN PRINT "Failed8:  ";%e[296]

    PRINT "testConvertPattern Finished"
ENDPROC


@Formation1
; Formation Heart
; X  -4 TO +4 step 1px
; Y  -0.25 TO +0.5  step 1px
;     0123456789ABCDE
DATA "               ":;0 
DATA "     8   9     ":;1
DATA "    7     6    ":;2
DATA "     4   5     ":;3
DATA "      3 2      ":;4
DATA "       1       ":;5
DATA "               ":;6
DATA "               ":;7
DATA -4,4,1,-0.25,0.5,1
DATA -4,4,1,-0.25,0.5,1
DATA -4,4,1,-0.25,0.5,1
DATA -4,4,1,-0.25,0.5,1
DATA -4,4,1,-0.25,0.5,1
DATA -4,4,1,-0.25,0.5,1
DATA -4,4,1,-0.25,0.5,1
DATA -4,4,1,-0.25,0.5,1
DATA -4,4,1,-0.25,0.5,1
;Cross-eyed
@Formation2
DATA "9             8":;0 
DATA "      6 7      ":;1
DATA "5             4":;2
DATA "      2 3      ":;3
DATA "       1       ":;4
DATA "               ":;5
DATA "               ":;6
DATA "               ":;7
DATA -7,7,2,0,0,1:; 1
DATA -6,0,1,0,0,1:; 2
DATA 0,6,1,0,0,1:;  3
DATA -6,0,1,0,0,1:; 4
DATA 0,6,1,0,0,1:;  5
DATA -6,0,1,0,0,1:; 6
DATA 0,6,1,0,0,1:;  7
DATA -6,0,1,0,0,1:; 8
DATA 0,6,1,0,0,1:;  9
;Borg
@Formation3
DATA "               ":;0 
DATA "               ":;1
DATA "               ":;2
DATA "4 8 5          ":;3
DATA "               ":;4
DATA "6 1 7          ":;5
DATA "               ":;6
DATA "2 9 3          ":;7
DATA 0,11,1,-3,0,2
DATA 0,11,1,-3,0,2
DATA 0,11,1,-3,0,2
DATA 0,11,1,-3,0,2
DATA 0,11,1,-3,0,2
DATA 0,11,1,-3,0,2
DATA 0,11,1,-3,0,2
DATA 0,11,1,-3,0,2
DATA 0,11,1,-3,0,2
;Tick
@Formation4
DATA "              1 ":;0 
DATA "             2  ":;1
DATA "            3   ":;2
DATA "           4    ":;3
DATA "          5     ":;4
DATA "         6      ":;5
DATA "      9 7       ":;6
DATA "       8        ":;7
DATA -14,0,1,0,7,2
DATA -13,1,1,-1,6,1
DATA -12,2,1,-2,5,2
DATA -11,3,1,-3,4,1
DATA -10,4,1,-4,3,2
DATA -9,5,1,-5,2,1
DATA -8,6,1,-6,1,2
DATA -7,7,1,-7,0,1
DATA -6,8,2,-6,1,2
;Christmas Tree
@Formation5
DATA "               ":;5
DATA "       1       ":;0 
DATA "     2   3     ":;1
DATA "   4       5   ":;2
DATA " 6           7 ":;3
DATA "      8 9      ":;4
DATA "               ":;6
DATA "               ":;7
DATA -1,1,1,-1,2,1
DATA -1,1,1,-1,2,1
DATA -1,1,1,-1,2,1
DATA -1,1,1,-1,2,1
DATA -1,1,1,-1,2,1
DATA -1,1,1,-1,2,1
DATA -1,1,1,-1,2,1
DATA -1,1,1,-1,2,1
DATA -1,1,1,-1,2,1

;Christmas Tree Tight
@Formation6
DATA "               ":;5
DATA "       1       ":;0 
DATA "      2 3      ":;1
DATA "     4   5     ":;2
DATA "    6  8  7    ":;3
DATA "               ":;4
DATA "       9       ":;6
DATA "               ":;7
DATA -4,4,1,-1,1,1
DATA -4,4,1,-1,1,1
DATA -4,4,1,-1,1,1
DATA -4,4,1,-1,1,1
DATA -4,4,1,-1,1,1
DATA -4,4,1,-1,1,1
DATA -4,4,1,-1,1,1
DATA -4,4,1,-1,1,1
DATA -4,4,1,-1,1,1
;Arrow
@Formation7
DATA "               ":;5
DATA "      8 9      ":;4
DATA " 6           7 ":;3
DATA "   4       5   ":;2
DATA "     2   3     ":;1
DATA "       1       ":;0 
DATA "               ":;6
DATA "               ":;7
DATA -1,1,1,-1,2,1
DATA -1,1,1,-1,2,1
DATA -1,1,1,-1,2,1
DATA -1,1,1,-1,2,1
DATA -1,1,1,-1,2,1
DATA -1,1,1,-1,2,1
DATA -1,1,1,-1,2,1
DATA -1,1,1,-1,2,1
DATA -1,1,1,-1,2,1
;Arrow Tight
@Formation8
DATA "               ":;5
DATA "       9       ":;6
DATA "               ":;4
DATA "    6  8  7    ":;3
DATA "     4   5     ":;2
DATA "      2 3      ":;1
DATA "       1       ":;0 
DATA "               ":;7
DATA -4,4,1,-1,1,1
DATA -4,4,1,-1,1,1
DATA -4,4,1,-1,1,1
DATA -4,4,1,-1,1,1
DATA -4,4,1,-1,1,1
DATA -4,4,1,-1,1,1
DATA -4,4,1,-1,1,1
DATA -4,4,1,-1,1,1
DATA -4,4,1,-1,1,1
;Who
@Formation9
DATA "               ":;5
DATA "    1     2    ":;4
DATA "               ":;3
DATA "    4  3  5    ":;2
DATA "     6   7     ":;1
DATA "      8 9      ":;0 
DATA "               ":;6
DATA "               ":;7
DATA -3,3,1,-2,2,1
DATA -3,3,1,-2,2,1
DATA -3,3,1,-2,2,1
DATA -3,3,1,-2,2,1
DATA -3,3,1,-2,2,1
DATA -3,3,1,-2,2,1
DATA -3,3,1,-2,2,1
DATA -3,3,1,-2,2,1
DATA -3,3,1,-2,2,1
;Jiggly
@Formation10
DATA "               ":;5
DATA "   1   8   2   ":;4
DATA "               ":;3
DATA "   6   4   7   ":;2
DATA "               ":;1
DATA "   3   9   5   ":;0 
DATA "               ":;6
DATA "               ":;7
DATA -1,1,1,-0.75,0.75,1:;1
DATA -1,1,1,-0.75,0.75,1:;2
DATA -1,1,1,-0.75,0.75,1:;3
DATA -2,2,1,-1.25,1.25,1:;4
DATA -1,1,1,-0.75,0.75,1:;5
DATA -2,2,1,-1,1,1:;6
DATA -2,2,1,-0.75,0.75,1:;7
DATA -0.5,0.5,1,-0.25,0.25,1:;8
DATA -0.5,0.5,1,-0.25,0.25,1:;9

;-----------------------------
;
; WAVE DATA
; Name, Sprite pattern ID, difficulty, formation
;-----------------------------
@Wave
DATA "The Invasion",%12,%2
DATA "Venusian Spiders",%62,%2
DATA "Flagship",%16,%2
DATA "Coa Monster",%26,%2
DATA "Brain Wave",%22,%2
DATA "Whoovians",%14,%3
DATA "Sausage Time",%54,%3
DATA "Nemesis",%10,%3
DATA "Golden Age",%32,%3
DATA "Brain Drain",%22,%3
DATA "Full Spectrum",%56,%3
DATA "RTM",%0,%3
DATA "Little Acorns",%58,%4
DATA "Squid Game",%6,%4
DATA "Brain Freeze",%22,%4
DATA "!#$! Q",%18,%4
DATA "Scorpio",%30,%4
DATA "Spectres",%20,%4
DATA "Doh",%60,%4
DATA "Doomed",%28,%5
DATA "Space Lair",%24,%5
DATA "Squids In",%6,%5
DATA "Hydra",%30,%5
DATA "My Gal",%32,%5
DATA "Brainiac",%22,%6
DATA "Convoy Charger",%16,%6
DATA "Act Mooners",%26,%6
DATA "Lord Eugene",%24,%6
DATA "Big Ed",%60,%7
DATA "Kill Screen",%28,%7