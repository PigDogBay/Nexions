#program LtData
#autoline 10,10

; Mark Bailey
; 17 Jan 2024
; Generate data for Nexions
;
; q%() X pos
; r%() Y Pos
; s%() xLower
; t%() xUpper
; u%() xStep
; v%() yLower
; w%() yUpper
; x%() yStep
; b%() Difficulty
; p%() Sprite Pattern
;
RUN AT 3
DIM pat(9,9)
PROC unitTests()
STOP


DEFPROC readData()
    DIM title$(30,18)
    RESTORE @Wave
    FOR %i=1 TO 30
        READ title$(%i),%p(i),%b(i)
    NEXT %i
ENDPROC

DEFPROC readPattern()
    LOCAL index=1

    FOR i=1 TO 8
        READ a$
        FOR j=1 TO 15
            IF a$(j)<>" " THEN PROC addPosition(index,j,i,a$(j)) : index+=1
        NEXT j
    NEXT i
    FOR i=1 TO 9
        READ xStart,xEnd,xStep,yStart,yEnd,yStep
        pat(i,4)=xStart
        pat(i,5)=xEnd
        pat(i,6)=xStep
        pat(i,7)=yStart
        pat(i,8)=yEnd
        pat(i,9)=yStep
    NEXT i
ENDPROC

DEFPROC addPosition(index,x,y,c$)
    LOCAL t = 0 :; Asbolute XY
    IF c$="X" THEN t=1 :; Asbolute X Relative Y
    IF c$="Y" THEN t=2 :; Asbolute Y Relative X
    IF c$="R" THEN t=3 :; Relative XY
    pat(index,1)=x-1
    pat(index,2)=y-1
    pat(index,3)=t
ENDPROC

;
; Convert Data in pat() array to INT arrays
;        pat(i,1)= X Pos
;        pat(i,2)= Y Pos
;        pat(i,3)= Movement co-ord type
;        pat(i,4)=xStart
;        pat(i,5)=xEnd
;        pat(i,6)=xStep
;        pat(i,7)=yStart
;        pat(i,8)=yEnd
;        pat(i,9)=yStep
;
DEFPROC convertPattern()
ENDPROC

DEFPROC unitTests()
    PROC testReadPattern1()
    PROC testReadPattern2()
ENDPROC

DEFPROC testReadPattern1()
    PRINT "testReadPattern1"
    RESTORE @Formation
    PROC readPattern()
    IF pat(1,1)<>5 THEN PRINT "Failed: x pos ";pat(1,1)
    IF pat(1,2)<>1 THEN PRINT "Failed: y pos ";pat(1,2)
    IF pat(1,3)<>1 THEN PRINT "Failed: type ";pat(1,3)

    IF pat(9,1)<>7 THEN PRINT "Failed: x pos ";pat(9,1)
    IF pat(9,2)<>5 THEN PRINT "Failed: y pos ";pat(9,1)
    IF pat(9,3)<>1 THEN PRINT "Failed: type ";pat(9,1)
    PRINT "testReadPattern1 Finished"
ENDPROC

DEFPROC testReadPattern2()
    PRINT "testReadPattern2"
    RESTORE @Formation
    PROC readPattern()
    IF pat(1,4)<>0 THEN PRINT "Failed:  ";pat(1,4)
    IF pat(2,5)<>15 THEN PRINT "Failed:  ";pat(2,5)
    IF pat(3,6)<>1 THEN PRINT "Failed:  ";pat(3,6)
    IF pat(4,7)<>-0.25 THEN PRINT "Failed:  ";pat(4,7)
    IF pat(5,8)<>0.5 THEN PRINT "Failed:  ";pat(5,8)
    IF pat(9,9)<>1 THEN PRINT "Failed:  ";pat(9,9)

    PRINT "testReadPattern2 Finished"
ENDPROC


@Formation
; Formation 1
; X (Abs) 0 TO 15 step 1
; Y (Rel) -0.25 TO +0.5  step 2 
;     0123456789ABCDE
DATA "               ":;0 AXYR
DATA "     X   X     ":;1
DATA "    X     X    ":;2
DATA "     X   X     ":;3
DATA "      X X      ":;4
DATA "       X       ":;5
DATA "               ":;6
DATA "               ": ;7
DATA 0,15,1,-0.25,0.5,1
DATA 0,15,1,-0.25,0.5,1
DATA 0,15,1,-0.25,0.5,1
DATA 0,15,1,-0.25,0.5,1
DATA 0,15,1,-0.25,0.5,1
DATA 0,15,1,-0.25,0.5,1
DATA 0,15,1,-0.25,0.5,1
DATA 0,15,1,-0.25,0.5,1
DATA 0,15,1,-0.25,0.5,1

;-----------------------------
;
; WAVE DATA
; Name, Sprite pattern ID, difficulty, formation
;-----------------------------
@Wave
DATA "The Invasion",%12,%2
DATA "Venusian Spiders",%38,%2
DATA "Flagship",%16,%2
DATA "Coa Monster",%26,%2
DATA "Brain Wave",%22,%2
DATA "Whoovians",%14,%3
DATA "Sausage Time",%54,%3
DATA "Nemesis",%10,%3
DATA "Golden Age",%32,%3
DATA "Brain Drain",%22,%3
DATA "Full Spectrum",%56,%3
DATA "RTM",%0,%3
DATA "Little Acorns",%58,%4
DATA "Squid Game",%6,%4
DATA "Brain Freeze",%22,%4
DATA "!#$! Q",%18,%4
DATA "Scorpio",%30,%4
DATA "Spectres",%20,%4
DATA "Doh",%60,%4
DATA "Doomed",%28,%5
DATA "Space Lair",%24,%5
DATA "Squids In",%6,%5
DATA "Hydra",%30,%5
DATA "My Gal",%32,%5
DATA "Brainiac",%22,%6
DATA "Convoy Charger",%16,%6
DATA "Act Mooners",%26,%6
DATA "Lord Eugene",%24,%6
DATA "Big Ed",%60,%7
DATA "Kill Screen",%28,%7