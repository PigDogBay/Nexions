#program nexions
#autoline 10,10
#; 
#; Global Variables
#; 
#; %a - Fire button count, prevent user holding down fire
#; %b
#; %c - Enemy count
#; %d
#; %e
#; %f
#; %g
#; %h - tmp
#; %i - tmp
#; %j - tmp
#; %k - tmp
#; %l - Layer Y position, used to scroll starfield
#; %m - Current missile sprite ID, 7,8,9
#; %n 
#; %o 
#; %p 
#; %q
#; %r
#; %s - TODO Current State
#; %t
#; %u
#; %v - Sub wave number of enemies: 5,7,9
#; %w - Wave 1 - 20
#; %x - Ship X position
#; %y - Ship Y position
#; %z
#; lives - Current number of lives 
#; score - Current score
#; high - High score
#; timer - Last value of TIME, used to measure time duration (1/50th second) 
#; 
#; 
#; 
#; Game States:
#; 0 sTitle 
#; 1 sStart 
#; 2 sWave
#; 3 sNewWave
#; 4 sSubWave
#; 5 sGame
#; 6 sDie
#; 7 sGameOver
#; 
#; 
#; 
#; 
#; 

RUN AT 3
REM MPD Bailey 4 Jan 2024
REM Nexions
#; Constants for states
sTitle, sStart, sWave, sNewWave, sSubWave, sGame, sDie, sGameOver=0,1,2,3,4,5,6,7
PROC state(sTitle)

#; 
#; Main game loop
#; 
@gameLoop: 
ON %s: proc title(): PROC start(): PROC wave(): PROC newWave(): PROC subWave(): PROC game(): PROC die(): PROC gameOver()
GO TO @gameLoop

#;
#; Enter new state and initialize it
#;
DEFPROC state(newState)
%s = newState
ON %s: proc sTitle(): PROC sStart(): PROC sWave(): PROC sNewWave(): PROC sSubWave(): PROC sGame(): PROC sDie(): PROC sGameOver()
ENDPROC

#;
#; Initialize State TITLE
#;
DEFPROC sTitle()
PROC initGraphics()
LOAD "title.sl2" LAYER 
FOR i=0 TO 10
BEEP .1,-10 + i:BEEP .1,-20 + i:BEEP .1,-30 + i
NEXT i
ENDPROC

#; Title screen
#; Press fire to start game
#;
DEFPROC title()
%i = INPUT 1| INPUT 0
IF %i&$10 THEN PROC state(sStart)
ENDPROC

#;
#; Initialize State START
#;
DEFPROC sStart()
PROC initGraphics()
%x,%y,%l,%m,%a=%152,%210,%0,%7,%0
%w,%v=1,5
lives=3
score=0
LOAD "stars.sl2" LAYER 
FOR i=16 TO -16 STEP -1
BEEP .1,i
NEXT i
ENDPROC

DEFPROC start()
PROC display()
PROC score() : PROC lives()
#; Change state to new wave
PROC state(sWave)
ENDPROC

#;
#; Initialize State WAVE
#;
DEFPROC sWave()
timer = TIME
IF %v=5 THEN PROC state(sNewWave): ELSE PROC state(sSubWave)
ENDPROC

DEFPROC Wave()
ENDPROC

DEFPROC sNewWave() 
PROC display()
LAYER %0: PRINT AT %10,%10;%w;". Invasion"
LAYER %2,%1
ENDPROC

DEFPROC newWave() 
PROC display()
IF (TIME-timer)<50 THEN ENDPROC
LAYER %0: PRINT AT %10,%10;"                   "
LAYER %2,%1
PROC state(sSubWave)
ENDPROC

DEFPROC sSubWave() 
PROC display()
ENDPROC

DEFPROC subWave() 
PROC display()
%c=%v
FOR %i=%1 TO %v
SPRITE %9+i,%30 + RND 200,%30 + RND 100,%5,%1
SPRITE CONTINUE %9+i,%30 TO %230 STEP %1 RUN ,%30 TO %150 STEP %2 RUN ,%7,%0
NEXT %i
%v = %v + 2
IF %v>9 THEN %w+=1 : %v=5
PROC state(sGame)  
ENDPROC

#;
#; Initialize State GAME
#;
DEFPROC sGame()
timer = TIME
ENDPROC

DEFPROC game()
PROC display()
PROC handleInput()
PROC bomb()
PROC colDet() TO %i
IF %i THEN PROC state(sDie)
#; No Enemies left, change state to sWave
IF %c<1 THEN PROC state(sWave)
ENDPROC

#;
#; Initialize State DIE
#;
DEFPROC sDie()
#; Lose a life
timer = TIME
lives-=1
PROC lives()
ENDPROC

DEFPROC die()
PROC display()

#; Wait for 2 seconds
BEEP 0.05,RND(30)-60
IF (TIME-timer)< 100 THEN ENDPROC 
#; Reset the ship positions
%x=%152

#;Reset bullet count and Fire press
%m, %a = %7,%0

#; Back to the game
IF lives=0 THEN PROC state(sGameOver) : ELSE PROC state(sGame)
ENDPROC

DEFPROC sGameOver()
timer = TIME
LAYER %0: PRINT AT %10,%10;"Game Over"
LAYER %2,%1
ENDPROC

#;
#; Initialize State GAMEOVER
#;
DEFPROC gameOver()
PROC display()
#; Wait for 2 seconds
IF (TIME-timer)< 100 THEN ENDPROC 
%i = INPUT 1| INPUT 0
IF %i&$10 THEN PROC state(sTitle)
ENDPROC

#; 
#; Set up Layers and Sprites
#; 
DEFPROC initGraphics()

#; Layers
LAYER 0: BORDER 0: PAPER 0: INK 7: CLS 
LAYER CLEAR
LAYER OVER 6
LAYER 2,1: LAYER ERASE 0,0,256,192

#; Sprites
BANK NEW bankId
LOAD "sprites.spr" BANK bankId
SPRITE CLEAR 
SPRITE BANK bankId
BANK bankId CLEAR
SPRITE PRINT 1
SPRITE STOP 

ENDPROC 

#; 
#; 
#; 
DEFPROC handleInput()
%i = INPUT 1| INPUT 0
IF %i&1 THEN %x+=2
IF %i&2 THEN %x-=2
#; Prevent user holding down the fire button
IF %i&$10 THEN %a+=1 : ELSE %a=0
IF %a=1 THEN PROC fire()
IF %x<32 THEN %x=%32
IF %x>271 THEN %x=%272
ENDPROC 

#; 
#;Scroll star field downwards and move sprites 
#; 
DEFPROC display()
%l-=1
IF %l=-1 THEN %l=191
SPRITE %0,%x,%y,%0,%@1101
SPRITE MOVE INT 
LAYER AT %0,%l
ENDPROC 

#; 
#; Collision Detection
#; 
DEFPROC colDet()
FOR %i=%7 TO %9
%h = SPRITE OVER (%i,%10 TO %19,%7,%7) 
IF %h>0 THEN PROC destroyEnemy(%h,%i)
NEXT %i

#; Return true if player has been hit
ENDPROC = SPRITE OVER (%0,%20 TO %24,%7,%2)

DEFPROC score()
LAYER %0: PRINT AT %0,%0;score
LAYER %2,%1
ENDPROC 

DEFPROC lives()
LAYER %0: PRINT AT %0,%31;lives
LAYER %2,%1
ENDPROC 


#; 
#; 
#; 
DEFPROC fire()
#; Exit if 3 missiles flying
IF SPRITE 9 THEN ENDPROC
BEEP .1,0
SPRITE %m,%x,%200,%4,1
SPRITE CONTINUE %m,%x,%0 TO %200 STEP -8 RUN,%4,%3
%m+=%1: IF %m>9 THEN %m=%7
ENDPROC 

#; 
#; 
#; 
DEFPROC destroyEnemy(%s,%b)
SPRITE %s,%0,%0,%0,%0: SPRITE %b,%0,%0,%0,%0
%c-=%1
BEEP .1,-5
#; Update the score
score+=50
PROC score()
ENDPROC

DEFPROC clearEnemies()
FOR %i=%10 TO %19
SPRITE %i,%0,%0,%0,%0: SPRITE %i+10,%0,%0,%0,%0
NEXT %i
ENDPROC


#; 
#; 
#; 
DEFPROC bomb()
PRIVATE bomb=0
LOCAL %x,%y 
sId = bomb+10:bId=20+bomb
IF NOT SPRITE sId OR SPRITE bId THEN GO TO @noBomb
IF % RND 20<>5 THEN GO TO @noBomb
%x = SPRITE AT (sId,0)
%y = SPRITE AT (sId,1)
SPRITE bId,%x,%y,%5,1
SPRITE CONTINUE bId,,%x TO 200 STEP 2 RUN ,%5,3
@noBomb: bomb+=1: IF bomb=9 THEN bomb=0
ENDPROC 

DEFPROC dbg(%i)
LAYER %0: PRINT AT %21,%0;%i
LAYER %2,%1
ENDPROC

#autoline