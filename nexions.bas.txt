#program nexions
#autoline 10,10
#; MPD Bailey Technology 4 Jan 2024
#; Nexions
#; 
#; GLOBAL VARIABLES
#; ----------------
#; 
#; %a - Fire button count, prevent user holding down fire
#; %b - Pattern change counter
#; %c - Enemy count
#; %d - Enemy sprite pattern
#; %e - Bomb count
#; %f - Spider bomb counter
#; %g - tmp
#; %h - tmp
#; %i - tmp
#; %j - tmp
#; %k - tmp
#; %l - Layer Y position, used to scroll starfield
#; %m - Current missile sprite ID, 7,8,9
#; %n 
#; %o 
#; %p 
#; %q
#; %r
#; %s - Current State
#; %t - Timer counter
#; %u
#; %v - Sub wave number of enemies: 5,7,9
#; %w - Wave 1 - 20
#; %x - Ship X position
#; %y - Ship Y position
#; %z
#; lives - Current number of lives 
#; score - Current score
#; high - High score
#; timer - Last value of TIME, used to measure time duration (1/50th second) 
#; 
#; Arrays
#; titles$ - Level names
#; b%[] - bomb speed
#; p% - enemy pattern
#;
#;
#; GAME STATES
#; -----------
#;
#; 0 sTitle 
#; 1 sStart 
#; 2 sWave
#; 3 sNewWave
#; 4 sSubWave
#; 5 sGame
#; 6 sDie
#; 7 sGameOver
#; 
#; 
#; 
#; 
#; 
#; SPRITES
#; -------
#; 
#; 0 - Player ship
#; 7,8,9 - Player bullets
#; 10 - Mothership
#; 11-19 - Enemies
#; 20 - Spider bomb
#; 21-29 - Enemy Bombs
#; 50-53 - Enemy explosions
#; 
#; 

RUN AT 3
#; Constants for states
sTitle, sStart, sWave, sNewWave, sSubWave, sGame, sDie, sInvuln, sGameOver=0,1,2,3,4,5,6,7,8
LOAD "data.bin" INT: PROC initSnd(): PROC readData():proc font(): PROC loadHS() TO high :PROC state(sTitle)

#;-----------------------------
#;
#; State Machine Functions
#;
#;-----------------------------

@g 
ON %s: proc title(): PROC start(): PROC wave(): PROC newWave(): PROC subWave(): PROC game(): PROC die(): PROC invuln():PROC gameOver()
PROC anim():GO TO @g


#;
#; Enter new state and initialize it
#;
DEFPROC state(newState)
%s = newState
ON %s: proc sTitle(): PROC sStart(): PROC sWave(): PROC sNewWave(): PROC sSubWave(): PROC sGame(): PROC sDie(): PROC sInvuln():PROC sGameOver()
ENDPROC

#; 
#; *** ENTER STATE: TITLE  ***
#; 
DEFPROC sTitle()
PROC initGraphics()
LOAD "title.sl2" LAYER
DRIVER %49,%2,%2
LAYER 0: PRINT #1; TAB 9;INK 2;"Fire To Start": LAYER 2,1
ENDPROC
#; 
#; *** STATE: TITLE ***
#; 
DEFPROC title()
#; Flash press fire message

#; Fire to start game
%i = INPUT 1| INPUT 0
IF %i&$10 THEN PROC state(sStart)
ENDPROC


#; 
#; *** STATE: START ***
#; 
DEFPROC sStart()
PROC initGraphics()
%x,%y,%l,%m,%a=%152,%208,%0,%7,%0
%w,%v=0,5
lives=3
score=0
LOAD "stars.sl2" LAYER
ENDPROC
#; 
#; *** ENTER STATE: START***
#; 
DEFPROC start()
PROC display()
PROC score() :PROC hiScore(): PROC lives()
#; Enable player ship and animate between patterns 8-9
SPRITE %0,%x,%y,%9,%1
SPRITE CONTINUE %0,,,%8 TO %9,$4,%3,%0
#; Change state to new wave
PROC state(sWave)
ENDPROC

#; 
#; *** ENTER STATE: WAVE ***
#; 
DEFPROC sWave():ENDPROC
#; 
#; *** ENTER STATE: WAVE ***
#; 
DEFPROC Wave()
PROC handleInput()
PROC display()
PROC colDet()
#; Check if mothership from last wave has cleared
IF % SPRITE 10 THEN ENDPROC
timer = TIME
IF %v=5 THEN PROC state(sNewWave): ELSE PROC state(sSubWave)
ENDPROC

#; 
#; *** ENTER STATE: NEW WAVE***
#; 
DEFPROC sNewWave()
%w+=1
IF %w=31 THEN %w=1
DRIVER %49,%2,%5
#; Centre text
%i=(29- LEN title$(%w)[^])/2
LAYER %0: PRINT AT %10,%i;%w;". ";title$(%w)
LAYER %2,%1
ENDPROC
#; 
#; *** ENTER STATE: NEW WAVE ***
#; 
DEFPROC newWave() 
PROC handleInput()
PROC display()
IF (TIME-timer)<50 THEN ENDPROC
LAYER %0: PRINT AT %10,%4;"                            "
LAYER %2,%1
PROC state(sSubWave)
ENDPROC


#; 
#; *** ENTER STATE: SUBWAVE ***
#; 
DEFPROC sSubWave()
timer = TIME:%c=%v:%d=%p(w)
ENDPROC
#; 
#; *** ENTER STATE: SUBWAVE ***
#; 
DEFPROC subWave() 
PROC handleInput()
PROC display()
IF (TIME-timer)<25 THEN ENDPROC
FOR %i=%1 TO %v
#;SPRITE %10+i,%30 + RND 200,%30 + RND 120,%d,%1
#;SPRITE CONTINUE %10+i,%30 TO %230 STEP %1 RUN ,%30 TO %150 STEP %2 RUN,%d,%0
%j=%9+i
SPRITE %10+i,%q(j),%r(j),%d,1
SPRITE CONTINUE %10+i,%s(j) TO %t(j) STEP %u(j) RUN ,%v(j) TO %w(j) STEP %x(j) RUN,%d,0

NEXT %i

#; Mother ship appears after random delay
SPRITE %10,%16,%32,%45,%1
SPRITE CONTINUE %10,%0 TO %319 STEP %2 RUN ,,%45,%11,,%20+ RND (100)
%v+=2: IF %v>9 THEN %v=%5
PROC state(sGame)  
ENDPROC

#; 
#; *** ENTER STATE: GAME ***
#; 
DEFPROC sGame()
PROC display():PROC clearBombs()
ENDPROC
#; 
#; *** ENTER STATE: GAME ***
#; 
DEFPROC game()
PROC display()
PROC handleInput()
PROC bomb()
PROC colDet() TO %i
IF %i THEN PROC state(sDie)
#; No Enemies left, change state to sWave
IF %c<1 THEN PROC state(sWave)
ENDPROC

#; 
#; *** ENTER STATE: Invulnerability ***
#; Clear any bombs and spider bomb
DEFPROC sInvuln()
PROC clearBombs(): SPRITE %20,%0,%0,%0,%0:timer= TIME
#;New ship
SPRITE %0,%x,%y,%9,%1
SPRITE CONTINUE %0,,,%8 TO %9,$4,%3,%0
PROC lives()
ENDPROC
#; 
#; *** ENTER STATE: Invulnerability ***
#; No bombs
#; 
DEFPROC invuln()
PROC display()
PROC handleInput()
PROC colDet()
IF (TIME-timer)>75 THEN PROC state(sGame)
ENDPROC

#; 
#; *** ENTER STATE: DIE ***
#; 
DEFPROC sDie()
#; Lose a life
timer = TIME
lives-=1

#;Show ship explosion patterns
#;Patterns 48 to 53
#;Flags Disable when reach limit and update when stationary
#;Rate every 10 calls, delay 5 calls
SPRITE %0,%x,%y,%48,%1
SPRITE CONTINUE %0,,,%48 TO %53,$60,%5,%5
DRIVER %49,%2,%22
PROC clearBombs()
ENDPROC


#; 
#; *** STATE: DIE ***
#; 
DEFPROC die()
PROC display()

#; Wait for 2 seconds
IF (TIME-timer)< 100 THEN ENDPROC 
#; Reset the ship positions
%x=%152

#;Reset bullet count and Fire press
%m, %a = %7,%0

#; Back to the game
IF lives=0 THEN PROC state(sGameOver) : ENDPROC
PROC state(sInvuln)
ENDPROC


#; 
#; *** ENTER STATE: GAME OVER  ***
#; 
DEFPROC sGameOver()
timer = TIME
LAYER %0: PRINT AT %10,%10;"Game Over"
LAYER %2,%1
IF score > high THEN high=score: DRIVER %49,%2,%6:PROC saveHS(high)
PROC hiScore()
ENDPROC
#; 
#; *** STATE: GAME OVER  ***
#; 
DEFPROC gameOver()
PROC display()
#; Wait for 2 seconds
IF (TIME-timer)< 100 THEN ENDPROC 
%i = INPUT 1| INPUT 0
IF %i&$10 THEN PROC state(sTitle)
ENDPROC


#;-----------------------------
#;
#; Utility Functions
#; Do NOT change state in these
#;
#;-----------------------------


#; 
#; *** INITIALIZE GRAPHICS ***
#; 
#; Set up Layers and Sprites
DEFPROC initGraphics()

#; Layers
LAYER 0: BORDER 0: PAPER 0: INK 7: CLS :LAYER CLEAR: LAYER OVER 6
LAYER 2,1: LAYER ERASE 0,0,256,192

#; Sprites
BANK NEW bankId
LOAD "sprites.spr" BANK bankId
SPRITE CLEAR : SPRITE BANK bankId:BANK bankId CLEAR
SPRITE PRINT 1: SPRITE BORDER 1: SPRITE STOP 

ENDPROC 

#; Set up AY sound driver and load sound effects
#; If driver is already installed, will throw an error
#; So this code will catch and ignore the error
DEFPROC initSnd()
    ON ERROR ENDPROC  
    .install "ayfx.drv"
    BANK NEW %i
    LOAD "sfx.afb" BANK %i
    DRIVER 49,1,%i
ENDPROC

#; 
#; *** HANDLE INPUT ***
#; 
DEFPROC handleInput()
%i = INPUT 1| INPUT 0
IF %i&1 THEN %x+=3
IF %i&2 THEN %x-=3
#; Prevent user holding down the fire button
IF %i&$10 THEN %a+=1 : ELSE %a=0
IF %a=1 THEN PROC fire()
IF %x<32 THEN %x=%32
IF %x>271 THEN %x=%272
ENDPROC 


#; 
#; *** UPDATE DISPLAY  ***
#; 
#;Scroll star field downwards and move sprites 
DEFPROC display()
%l-=1:IF %l=-1 THEN %l=191
#! Update player sprite position and pattern
SPRITE %0,%x,%y:SPRITE MOVE INT:LAYER AT %0,%l
ENDPROC 


#; 
#; *** COLLISION DETECTION ***
#; 
DEFPROC colDet()
FOR %i=%7 TO %9
%h = SPRITE OVER (%i,%10 TO %20,%7,%7) 
IF %h>0 THEN PROC destroyEnemy(%h,%i)
NEXT %i

#; Return true if player has been hit
ENDPROC = SPRITE OVER (%0,%20 TO %29,%7,%2)

#; 
#; *** UPDATE SCORE ***
#; 
DEFPROC score()
LAYER %0: PRINT AT %0,%0;score:LAYER %2,%1
ENDPROC 
DEFPROC hiScore()
LAYER %0: PRINT AT %0,%14;high:LAYER %2,%1
ENDPROC 



#; 
#; *** ANIMATE ENEMY SPRITES ***
#;
#; Cannot use SPRITE CONTINUE to automate the pattern change
#; as it is been updated to quickly, (set a rate will slow movement)
#; So need manually change the pattern every 10 calls
#;
DEFPROC anim() 
%b+=1: IF (%b<>10) AND (%b<>20) THEN ENDPROC
%j=%d
#;Animate mothersip and spider
SPRITE CONTINUE %10,,,%46:SPRITE CONTINUE %20,,,%38
IF %b=20 THEN %j+=1:%b=0: SPRITE CONTINUE %10,,,%47: SPRITE CONTINUE %20,,,%39
#;Animate enemies
FOR %i=%11 TO %19
SPRITE CONTINUE %i,,,%j
NEXT %i
ENDPROC

#; 
#; *** UPDATE LIVES ***
#; 
DEFPROC lives()
FOR %i=2 TO lives :SPRITE %60+i,16+(%i-2)*18,%230,%8,1:NEXT %i
FOR %i=lives+1 TO 10:SPRITE %60+i,0,0,%8,0:NEXT %i
ENDPROC

#; 
#; *** PLAYER FIRE ***
#; 
DEFPROC fire()
#; Exit if 3 missiles flying
IF SPRITE 9 THEN ENDPROC
DRIVER %49,%2,%11
SPRITE %m,%x,%200,%36,%1
SPRITE CONTINUE %m,%x,%0 TO %200 STEP -8 RUN,%36 TO %37,%3
%m+=%1: IF %m>9 THEN %m=%7
ENDPROC 


#; 
#; *** DESTROY ENEMY ***
#; 
DEFPROC destroyEnemy(%s,%b)
#; Get enemy x,y pos
%i=SPRITE AT (%s,0)
%j= SPRITE AT (%s,1)
PROC bang(%i,%j)
SPRITE %s,%0,%0,%0,%0: SPRITE %b,%0,%0,%0,%0
#;Spider bomb 
IF %s=20: score+=500: DRIVER %49,%2,%1
#;Mothership 
ELSE IF %s=10:score+=250: DRIVER %49,%2,%1
#;Decrease normal enemy count
ELSE:%c-=%1:score+=50
ENDIF
DRIVER %49,%2,%21
PROC score()
ENDPROC


#; 
#; *** CLEAR ENEMIES ***
#; 
DEFPROC clearEnemies()
FOR %i=%10 TO %19
SPRITE %i,%0,%0,%0,%0: SPRITE %i+10,%0,%0,%0,%0
NEXT %i
ENDPROC

DEFPROC clearBombs()
FOR %i=%20 TO %29
SPRITE %i,%0,%0,%0,%0
NEXT %i
ENDPROC

#; 
#; *** ENEMY BOMB ***
#; Temporary vars:
#; %g - sprite id
#; %h - bomb id
#; %i - sprite x
#; %j - sprite y
#; %k - probability
#; %f - spider bomb timer
#;
#; Global
#; %x - player x pos
#; %w - wave
#; 
DEFPROC bomb()
%g=%e+10:%h=%e+20:%e+=1: IF %e=10 THEN %e=%0
#;Deal with spider bomb
IF %f=1 THEN SPRITE %20,%0,%0,%0,%0
IF %f>0 THEN %f-=1
 
#; Check if there is an enemy
#; Does a bomb sprite already exist
IF % NOT SPRITE g OR SPRITE h THEN ENDPROC
%i= SPRITE AT (%g,%0)

#;Drop a spider bomb
IF %g=10 AND (w>3) AND (i>300) THEN SPRITE %h,%i,32,%39,%1:SPRITE CONTINUE %h,%32 to %255 STEP -RND(4) RUN,%(w*2+100) TO %225 STEP %(w>>4+3) RUN,%38 TO %39,%0: %f=%(5*w+140):ENDPROC
IF %g=10 THEN ENDPROC

#;More chance of dropping bomb closer to enemy
IF %x>i THEN %k=%x-i:ELSE %k=%i-x
IF %b(w) < RND (k+75) THEN ENDPROC
%j = SPRITE AT (%g,%1)
SPRITE %h,%i,%j,%5,%1
SPRITE CONTINUE %h,,%0 TO 225 STEP %b[w] RUN ,%5,%3
ENDPROC 

#;
#; Defender style explosion for enemies
#;
DEFPROC bang(%x,%y)
SPRITE 50,%x,%y,%43,%1
SPRITE 51,%x,%y,%43,%1
SPRITE 52,%x,%y,%43,%1
SPRITE 53,%x,%y,%43,%1
%j=%1+ RND 10
%k=%10-j
SPRITE CONTINUE %50,%0 TO %x  STEP %SGN{-j} RUN, %0 TO %y STEP %SGN{-k} RUN, %43,%3
%j=%1+ RND 10
%k=%10 - j
SPRITE CONTINUE %51,%x TO %256 STEP %j RUN, %y TO %192 STEP %k RUN, %43,%3
%j=%1+ RND 10
%k=%10 - j
SPRITE CONTINUE %52,%x TO %256 STEP %j RUN, %0 TO %y STEP %SGN{-k} RUN, %43,%3
%j=%1+ RND 10
%k=%10 - j
SPRITE CONTINUE %53,%0 TO %x STEP % SGN {-j} RUN ,%y TO %192 STEP %k RUN ,%43,%3
ENDPROC

#;
#; High Score Load/Save
#;
DEFPROC loadHS()
LOCAL h()
ON ERROR ENDPROC =10000
LOAD "hs.bin" DATA h()
ENDPROC =h(1)

DEFPROC saveHS(hi)
LOCAL h() : DIM h(1) : h(1)= hi
ON ERROR ENDPROC
SAVE "hs.bin" DATA h()
ENDPROC

#; 
#; *** DEBUG PRINT ***
#; 
DEFPROC dbg(%i)
LAYER %0: PRINT AT %21,%0;%i;"    ":LAYER %2,%1
ENDPROC

DEFPROC font()
LOAD "Reactor.ch8" CODE %$FA00,768
POKE 23607,%$F9: POKE 23606,0:PRINT CHR$ 2
ENDPROC


DEFPROC readData()
DIM title$(30,18)
RESTORE @Wave
FOR %i=1 TO 30
READ title$(%i),%p(i),%b(i)
NEXT %i
ENDPROC

#;-----------------------------
#;
#; WAVE DATA
#;
#;-----------------------------
@Wave
DATA "The Invasion",%12,%2
DATA "Venusian Spiders",%62,%2
DATA "Flagship",%16,%2
DATA "Coa Monster",%26,%2
DATA "Brain Wave",%22,%2
DATA "Whoovians",%14,%3
DATA "Sausage Time",%54,%3
DATA "Nemesis",%10,%3
DATA "Golden Age",%32,%3
DATA "Brain Drain",%22,%3
DATA "Full Spectrum",%56,%3
DATA "RTM",%0,%3
DATA "Little Acorns",%58,%4
DATA "Squid Game",%6,%4
DATA "Brain Freeze",%22,%4
DATA "!#$! Q",%18,%4
DATA "Scorpio",%30,%4
DATA "Spectres",%20,%4
DATA "Doh",%60,%4
DATA "Doomed",%28,%5
DATA "Space Lair",%24,%5
DATA "Squids In",%6,%5
DATA "Hydra",%30,%5
DATA "My Gal",%32,%5
DATA "Brainiac",%22,%6
DATA "Convoy Charger",%16,%6
DATA "Act Mooners",%26,%6
DATA "Lord Eugene",%24,%6
DATA "Big Ed",%60,%7
DATA "Kill Screen",%28,%7

#autoline